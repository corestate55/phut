#!/usr/bin/env ruby
$LOAD_PATH.unshift File.join(File.dirname(__FILE__), '..', 'lib')
require 'gli'
require 'phut'
require 'pry'

module Phut
  # /bin/phut command
  module App
    extend GLI::App

    program_desc 'Virtual network in seconds'

    version Phut::VERSION

    command :shell do |c|
      c.action do |_global_options, _options, _args|
        Pry.prompt =
          [
            proc { 'phut> ' },
            proc { 'phut* ' }
          ]
        Pry::Commands.block_command 'vswitch' do |dpid|
          Phut::OpenVswitch.new(dpid.hex).run
        end
        Pry::Commands.block_command 'kill' do |dpid|
          Phut::OpenVswitch.new(dpid.hex).shutdown
        end
        pry
      end
    end

    command :run do |c|
      c.action do |_global_options, _options, args|
        configuration = Phut::Parser.new.parse(IO.read(args[0]))
        Phut::Runner.new(configuration).start
      end
    end

    command :stop do |c|
      c.action do |_global_options, _options, args|
        configuration = Phut::Parser.new.parse(IO.read(args[0]))
        Phut::Runner.new(configuration).stop
      end
    end

    command :kill do |c|
      c.action do |_global_options, _options, args|
        args.each { |each| Phut::OpenVswitch.new(each).shutdown }
      end
    end

    command :dump_flows do |c|
      c.action do |_global_options, _options, args|
        args.each { |each| Phut::OpenVswitch.new(each).dump_flows }
      end
    end

    pre do |global, _command, _options, _args|
      if global[:version]
        puts "#{exe_name} version #{version_string}"
        exit_now! nil, 0
      end
      true
    end

    default_command :shell

    exit run(ARGV)
  end
end
